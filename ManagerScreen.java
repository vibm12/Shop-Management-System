import java.sql.*;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.awt.*;
/**
 *
 * 
 * @author ABC
 */
public class ManagerScreen extends javax.swing.JFrame {

    /**
     * Creates new form ManagerScreen
     */
    public ManagerScreen() {
        initComponents();
        setResizable(false);
        UIManager.put("ToolTip.background", Color.WHITE);
        ename.setToolTipText("Enter Employee Name");
        eadd.setToolTipText("Enter Employee Address");
        emob.setToolTipText("Enter Employee Mobile");
        combo1.setToolTipText("Choose Year");
        combo2.setToolTipText("Choose Month");
        combo3.setToolTipText("choose day");
        elid.setToolTipText("Enter Employee loginid");
        epas.setToolTipText("Enter Employee password");
        erole.setToolTipText("Enter Employee role");
        eage.setToolTipText("Click to calulate age");
        sdealer.setToolTipText("Enter Dealer");
        selectcombo.setToolTipText("Select Item");
        sitemname.setToolTipText("Enter Item name");
        sitemid.setToolTipText("Enter Item id");
        squantity.setToolTipText("Enter Quantity");
        sitemperbox.setToolTipText("Enter Item per Quantity");
        stotal.setToolTipText("Click to calculate total");
        srate.setToolTipText("Enter Rate");
        scompany.setToolTipText("Enter Company");
        comboyear.setToolTipText("Choose Year");
        combomonth.setToolTipText("Choose Month");
        combodate.setToolTipText("Choose day");
        sdealer.setToolTipText("Enter Dealer");
    }
    Connection cn = null;
    Statement st = null;
    String Date = null;
    int age = 0;
    int global_flg = 0,check = 0,flag = -1;
    int BillId = 0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        adduser = new javax.swing.JButton();
        buystock = new javax.swing.JButton();
        additem = new javax.swing.JButton();
        loginlog = new javax.swing.JButton();
        billdata = new javax.swing.JButton();
        stock = new javax.swing.JButton();
        backlog = new javax.swing.JLabel();
        deletebutton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        AddUser = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ename = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        emob = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eage = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        elid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        epas = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        erole = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        add_addUser = new javax.swing.JButton();
        combo2 = new javax.swing.JComboBox<>();
        combo3 = new javax.swing.JComboBox<>();
        combo1 = new javax.swing.JComboBox<>();
        eadd = new javax.swing.JTextField();
        BuyStock = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        sid = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        sdealer = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        sitemid = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        sitemname = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        squantity = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        sitemperbox = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        srate = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        scompany = new javax.swing.JTextField();
        srdate = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        comboyear = new javax.swing.JComboBox<>();
        combomonth = new javax.swing.JComboBox<>();
        combodate = new javax.swing.JComboBox<>();
        sdate = new javax.swing.JTextField();
        sbuy = new javax.swing.JButton();
        stotal = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stable = new javax.swing.JTable();
        makebill = new javax.swing.JButton();
        selectcombo = new javax.swing.JComboBox<>();
        selectitem = new javax.swing.JLabel();
        AddItem = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        comboitem = new javax.swing.JComboBox<>();
        iitemid = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        iquantity = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        irate = new javax.swing.JTextField();
        iselected = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        itemadd = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        itable = new javax.swing.JTable();
        BillData = new javax.swing.JPanel();
        sbill = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        billtable = new javax.swing.JTable();
        custbill = new javax.swing.JButton();
        dlabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Tra_table = new javax.swing.JTable();
        LoginLog = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        logintable = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        avlstock = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        dispstock = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        deluser = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));
        jPanel1.setLayout(null);

        adduser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adduser.setText("Add User");
        adduser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adduserActionPerformed(evt);
            }
        });
        jPanel1.add(adduser);
        adduser.setBounds(10, 300, 160, 40);

        buystock.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buystock.setText("Buy Stock");
        buystock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buystock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buystockActionPerformed(evt);
            }
        });
        jPanel1.add(buystock);
        buystock.setBounds(10, 420, 160, 40);

        additem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        additem.setText("Add Item");
        additem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        additem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemActionPerformed(evt);
            }
        });
        jPanel1.add(additem);
        additem.setBounds(10, 480, 160, 40);

        loginlog.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        loginlog.setText("Login Log");
        loginlog.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginlogActionPerformed(evt);
            }
        });
        jPanel1.add(loginlog);
        loginlog.setBounds(10, 540, 160, 40);

        billdata.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        billdata.setText("Bill Data");
        billdata.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        billdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billdataActionPerformed(evt);
            }
        });
        jPanel1.add(billdata);
        billdata.setBounds(10, 600, 160, 40);

        stock.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        stock.setText("See Stock");
        stock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });
        jPanel1.add(stock);
        stock.setBounds(10, 660, 160, 40);

        backlog.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backlog.setForeground(new java.awt.Color(255, 255, 255));
        backlog.setText("Back To Login....");
        backlog.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backlog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backlogMouseClicked(evt);
            }
        });
        jPanel1.add(backlog);
        backlog.setBounds(20, 20, 140, 40);

        deletebutton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deletebutton.setText("Romove User");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(deletebutton);
        deletebutton.setBounds(10, 360, 160, 40);

        mainPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Enter Employee Name ");

        ename.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                enameKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Enter Employee Address");
        jLabel4.setPreferredSize(new java.awt.Dimension(140, 17));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Employee Mobile No.");
        jLabel5.setPreferredSize(new java.awt.Dimension(140, 17));

        emob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        emob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emobKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Enter Employee Date of Birth eg.(yyyy-mm-dd)");
        jLabel6.setPreferredSize(new java.awt.Dimension(140, 17));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Employee Age");
        jLabel7.setPreferredSize(new java.awt.Dimension(140, 17));

        eage.setEditable(false);
        eage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Employee Login Id");
        jLabel8.setPreferredSize(new java.awt.Dimension(140, 17));

        elid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Employee Password");
        jLabel9.setPreferredSize(new java.awt.Dimension(140, 17));

        epas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Employee Role");
        jLabel10.setPreferredSize(new java.awt.Dimension(140, 17));

        erole.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        erole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eroleKeyTyped(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Mobile No.", "Date of Birth", "Age", "Login Id", "Password", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table);

        add_addUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add_addUser.setText("ADD");
        add_addUser.setToolTipText("");
        add_addUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_addUserActionPerformed(evt);
            }
        });

        combo2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Month>", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        combo2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combo2.setPreferredSize(new java.awt.Dimension(75, 23));
        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });

        combo3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Date>", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        combo3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combo3.setPreferredSize(new java.awt.Dimension(75, 23));
        combo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo3ActionPerformed(evt);
            }
        });

        combo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Year>", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));
        combo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        eadd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout AddUserLayout = new javax.swing.GroupLayout(AddUser);
        AddUser.setLayout(AddUserLayout);
        AddUserLayout.setHorizontalGroup(
            AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(AddUserLayout.createSequentialGroup()
                        .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddUserLayout.createSequentialGroup()
                                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ename, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emob)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44))
                            .addGroup(AddUserLayout.createSequentialGroup()
                                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(erole, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(elid, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(AddUserLayout.createSequentialGroup()
                                            .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(combo3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eage, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                            .addComponent(epas)
                            .addComponent(add_addUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eadd))))
                .addContainerGap())
        );
        AddUserLayout.setVerticalGroup(
            AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddUserLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AddUserLayout.createSequentialGroup()
                        .addComponent(ename, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emob, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(eadd))
                .addGap(18, 18, 18)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eage)
                    .addComponent(combo1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddUserLayout.createSequentialGroup()
                        .addComponent(combo3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(combo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(erole, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_addUser))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
        );

        mainPanel.add(AddUser, "card2");

        BuyStock.setPreferredSize(new java.awt.Dimension(946, 711));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Stock Id");
        jLabel2.setPreferredSize(new java.awt.Dimension(140, 17));

        sid.setEditable(false);
        sid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sid.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sidMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Dealer Name");
        jLabel11.setPreferredSize(new java.awt.Dimension(140, 17));

        sdealer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sdealer.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        sdealer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sdealerKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Item Id");
        jLabel12.setPreferredSize(new java.awt.Dimension(140, 17));

        sitemid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sitemid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sitemidMouseClicked(evt);
            }
        });
        sitemid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sitemidKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Item Name");
        jLabel13.setPreferredSize(new java.awt.Dimension(140, 17));

        sitemname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sitemname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sitemnameKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Quantity");
        jLabel14.setPreferredSize(new java.awt.Dimension(140, 17));

        squantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        squantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                squantityKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("No of Item Per Quantity");
        jLabel15.setPreferredSize(new java.awt.Dimension(140, 17));

        sitemperbox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sitemperbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sitemperboxKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Rate");
        jLabel16.setPreferredSize(new java.awt.Dimension(140, 17));

        srate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        srate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                srateKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Company Name");
        jLabel17.setPreferredSize(new java.awt.Dimension(140, 17));

        scompany.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        scompany.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                scompanyKeyTyped(evt);
            }
        });

        srdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        srdate.setText("Today's Date");
        srdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        srdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srdateActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Date");
        jLabel18.setPreferredSize(new java.awt.Dimension(140, 17));

        comboyear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2018", "2019", "2020", "2021", "2022" }));
        comboyear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        combomonth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combomonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        combomonth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        combodate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combodate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Date", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        combodate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        sdate.setEditable(false);
        sdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sdateMouseClicked(evt);
            }
        });

        sbuy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sbuy.setText("BUY");
        sbuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sbuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbuyActionPerformed(evt);
            }
        });

        stotal.setEditable(false);
        stotal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stotalMouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Total Item");

        stable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock id", "Dealer name", "Item id", "Item name", "Quantity", "No of item/quatity", "Total Item", "Rate", "Company Name", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(stable);

        makebill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        makebill.setText("MAKE BILL");
        makebill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        makebill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makebillActionPerformed(evt);
            }
        });

        selectcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select>" }));
        selectcombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selectcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectcomboActionPerformed(evt);
            }
        });

        selectitem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectitem.setText("Select Item");

        javax.swing.GroupLayout BuyStockLayout = new javax.swing.GroupLayout(BuyStock);
        BuyStock.setLayout(BuyStockLayout);
        BuyStockLayout.setHorizontalGroup(
            BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuyStockLayout.createSequentialGroup()
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BuyStockLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BuyStockLayout.createSequentialGroup()
                                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BuyStockLayout.createSequentialGroup()
                                        .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(squantity, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(BuyStockLayout.createSequentialGroup()
                                        .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(srate)
                                            .addComponent(sid, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BuyStockLayout.createSequentialGroup()
                                                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(BuyStockLayout.createSequentialGroup()
                                                        .addComponent(comboyear, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(combomonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(combodate, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(sdate, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                                            .addGroup(BuyStockLayout.createSequentialGroup()
                                                .addComponent(selectitem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(BuyStockLayout.createSequentialGroup()
                                                .addComponent(selectcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(sitemname, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26)))
                                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BuyStockLayout.createSequentialGroup()
                                        .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sitemperbox, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(stotal)))
                                    .addComponent(scompany)
                                    .addGroup(BuyStockLayout.createSequentialGroup()
                                        .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BuyStockLayout.createSequentialGroup()
                                                    .addComponent(sbuy, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(31, 31, 31)
                                                    .addComponent(makebill))
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(sdealer, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(sitemid, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(srdate)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        BuyStockLayout.setVerticalGroup(
            BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuyStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sdealer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(selectitem, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sitemid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sitemname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(8, 8, 8)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(squantity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sitemperbox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stotal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 37, Short.MAX_VALUE)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(srate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scompany, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BuyStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sdate)
                    .addComponent(combodate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboyear)
                    .addComponent(combomonth)
                    .addComponent(makebill, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sbuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainPanel.add(BuyStock, "card3");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Select Item");

        comboitem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboitem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboitemActionPerformed(evt);
            }
        });

        iitemid.setEditable(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Item Id");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Total Quantity");

        iquantity.setEditable(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Rate");

        irate.setEditable(false);
        irate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        iselected.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        iselected.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                iselectedKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iselectedKeyTyped(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Select Quantity");

        itemadd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemadd.setText("ADD");
        itemadd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemaddActionPerformed(evt);
            }
        });

        itable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Quantity", "Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(itable);

        javax.swing.GroupLayout AddItemLayout = new javax.swing.GroupLayout(AddItem);
        AddItem.setLayout(AddItemLayout);
        AddItemLayout.setHorizontalGroup(
            AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(AddItemLayout.createSequentialGroup()
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboitem, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iitemid, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddItemLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(0, 30, Short.MAX_VALUE))
                            .addComponent(iquantity))
                        .addGap(18, 18, 18)
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(irate)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemadd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iselected, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))))
        );
        AddItemLayout.setVerticalGroup(
            AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iitemid)
                    .addComponent(comboitem)
                    .addComponent(irate)
                    .addComponent(iselected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iquantity))
                .addGap(29, 29, 29)
                .addComponent(itemadd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainPanel.add(AddItem, "card4");

        sbill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sbill.setText("Stock Bill");
        sbill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbillActionPerformed(evt);
            }
        });

        billtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill ID", "Bill Date", "Total Amount", "GST", "Final Amount", "Paid By"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        billtable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        billtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billtableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(billtable);

        custbill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        custbill.setText("Customer");
        custbill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        custbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custbillActionPerformed(evt);
            }
        });

        dlabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Tra_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Id", "Transaction Id", "Item Id", "Item Name", "Total Quantity", "Price/Item", "Total Amount", "Discount", "TotalAmount(Item)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(Tra_table);

        javax.swing.GroupLayout BillDataLayout = new javax.swing.GroupLayout(BillData);
        BillData.setLayout(BillDataLayout);
        BillDataLayout.setHorizontalGroup(
            BillDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BillDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BillDataLayout.createSequentialGroup()
                        .addComponent(sbill, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(custbill, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
            .addGroup(BillDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE))
        );
        BillDataLayout.setVerticalGroup(
            BillDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BillDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(custbill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sbill, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(BillDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BillDataLayout.createSequentialGroup()
                    .addContainerGap(121, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(443, 443, 443)))
        );

        mainPanel.add(BillData, "card5");

        label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label.setText("Displaying Login History........");

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Login Id", "Name", "Date and Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        logintable.setViewportView(jTable2);

        javax.swing.GroupLayout LoginLogLayout = new javax.swing.GroupLayout(LoginLog);
        LoginLog.setLayout(LoginLogLayout);
        LoginLogLayout.setHorizontalGroup(
            LoginLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(LoginLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(logintable, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE))
        );
        LoginLogLayout.setVerticalGroup(
            LoginLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLogLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(657, Short.MAX_VALUE))
            .addGroup(LoginLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLogLayout.createSequentialGroup()
                    .addGap(0, 155, Short.MAX_VALUE)
                    .addComponent(logintable, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPanel.add(LoginLog, "card6");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel24.setText("Showing All Stock Information.............");

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Dealer", "Date of Last stock", "Remaining Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dispstock.setViewportView(jTable3);

        javax.swing.GroupLayout avlstockLayout = new javax.swing.GroupLayout(avlstock);
        avlstock.setLayout(avlstockLayout);
        avlstockLayout.setHorizontalGroup(
            avlstockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avlstockLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(avlstockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dispstock, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE))
        );
        avlstockLayout.setVerticalGroup(
            avlstockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avlstockLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(636, Short.MAX_VALUE))
            .addGroup(avlstockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, avlstockLayout.createSequentialGroup()
                    .addGap(0, 259, Short.MAX_VALUE)
                    .addComponent(dispstock, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPanel.add(avlstock, "card7");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setText("Enter LoginId");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Remove");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deluserLayout = new javax.swing.GroupLayout(deluser);
        deluser.setLayout(deluserLayout);
        deluserLayout.setHorizontalGroup(
            deluserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deluserLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(deluserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deluserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                        .addComponent(jTextField2))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(550, Short.MAX_VALUE))
        );
        deluserLayout.setVerticalGroup(
            deluserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deluserLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(521, Short.MAX_VALUE))
        );

        mainPanel.add(deluser, "card8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enameKeyTyped
        if((Character.isLetter(evt.getKeyChar()))==false && !(Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_enameKeyTyped

    private void emobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emobKeyTyped
        if((Character.isDigit(evt.getKeyChar()))==false || (Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
        if(emob.getText().length() >= 10){
            evt.consume();
        }
    }//GEN-LAST:event_emobKeyTyped

    private void eroleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eroleKeyTyped
        if((Character.isLetter(evt.getKeyChar()))==false){
            evt.consume();
        }
    }//GEN-LAST:event_eroleKeyTyped

    private void add_addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_addUserActionPerformed
        
        Date = (String)combo1.getSelectedItem() + "-" + (String)combo2.getSelectedItem() + "-" + (String)combo3.getSelectedItem(); 
        if(ename.getText().isEmpty() || eadd.getText().isEmpty() || emob.getText().isEmpty() || elid.getText().isEmpty() || epas.getText().isEmpty() || erole.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Please fill all the information.","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        else if(!(erole.getText().isEmpty()==false && (erole.getText().equalsIgnoreCase("manager") || erole.getText().equalsIgnoreCase("employee")))){
            JOptionPane.showMessageDialog(this,"Enter a Valid Role","ERROR",JOptionPane.ERROR_MESSAGE);
        }else if(emob.getText().length() < 10){
            JOptionPane.showMessageDialog(this,"Enter 10 Digit Mobile Number","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
                st = cn.createStatement();
                String query = "insert into user values('" + elid.getText() + "'" + "," + "'" + ename.getText() + "'" + "," + "'" + eadd.getText() + "'" + "," + "'" + Date + "'" + "," + age + "," + Double.parseDouble(emob.getText()) +  "," + "'" + erole.getText() + "'" + "," + "'" + epas.getText() + "')";
                PreparedStatement ps = cn.prepareStatement(query);
                ps.execute();
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                model.addRow(new Object[]{ename.getText(),eadd.getText(),emob.getText(),Date,eage.getText(),elid.getText(),epas.getText(),erole.getText()});
                JOptionPane.showMessageDialog(this,"successfully added");
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this,"UNKNOWN ERROR","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_add_addUserActionPerformed
    int flg = 0,flg1 = 0;
    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
        if(combo1.getSelectedIndex()!=0){
            if(flg==1){
                Age_Function();
            }
        }
    }//GEN-LAST:event_combo1ActionPerformed

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed
        if(combo2.getSelectedIndex()!=0){
            flg1=2;
        }
    }//GEN-LAST:event_combo2ActionPerformed

    private void combo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo3ActionPerformed
        if(combo3.getSelectedIndex()!=0){
        flg=1;
            if(flg==1 && flg1==2){
                Age_Function();
            }
        }
    }//GEN-LAST:event_combo3ActionPerformed
    int stockid;    
    private void sidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sidMouseClicked
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            selectcombo.removeAllItems();
            selectcombo.addItem("<Select>");
            ResultSet s=st.executeQuery("select distinct I_name from stock");
            while(s.next()){
                selectcombo.addItem(s.getString(1));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,"UNKNOWN ERROR","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            ResultSet s = st.executeQuery("select max(Sid) from stock");
            s.next();
            int id=s.getInt(1);
            if(id==0){
                sid.setText("1");
            }else if(global_flg!=0){
                sid.setText(String.valueOf(id));
            }else{
                sid.setText(String.valueOf(++id));
            }
        }catch(SQLException e){ 
           // JOptionPane.showMessageDialog(this,"UNKNOWN ERROR","ERROR",JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_sidMouseClicked

    private void sdealerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sdealerKeyTyped
         if((Character.isLetter(evt.getKeyChar()))==false && !(Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_sdealerKeyTyped

    private void sitemidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sitemidKeyTyped
        if((Character.isDigit(evt.getKeyChar()))==false || (Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_sitemidKeyTyped

    private void sitemnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sitemnameKeyTyped
        if((Character.isLetter(evt.getKeyChar()))==false && !(Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_sitemnameKeyTyped

    private void squantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_squantityKeyTyped
        if((Character.isDigit(evt.getKeyChar()))==false || (Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_squantityKeyTyped

    private void sitemperboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sitemperboxKeyTyped
         if((Character.isDigit(evt.getKeyChar()))==false || (Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_sitemperboxKeyTyped

    private void srateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srateKeyTyped
        if((Character.isDigit(evt.getKeyChar()))==false || (Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_srateKeyTyped

    private void scompanyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scompanyKeyTyped
         if((Character.isLetter(evt.getKeyChar()))==false && !(Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_scompanyKeyTyped
    String datedatabase;
    private void srdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srdateActionPerformed
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
	LocalDate localDate = LocalDate.now();
	String date = dtf.format(localDate);   
        String[] arrofdate=date.split("/",3);
        datedatabase = arrofdate[0]+"-"+arrofdate[1]+"-"+arrofdate[2];
        //give local variable to global date
        sdate.setText(datedatabase);
    }//GEN-LAST:event_srdateActionPerformed

    private void sbuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbuyActionPerformed
        if(sdealer.getText().isEmpty() || sitemid.getText().isEmpty() || sitemname.getText().isEmpty() || squantity.getText().isEmpty() || sitemperbox.getText().isEmpty() || srate.getText().isEmpty() || scompany.getText().isEmpty() || sdate.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Please fill all the information.","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                int qty = -1;
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
                st = cn.createStatement();
                ResultSet r = st.executeQuery("select quantity from stock where I_name = "+ " '"+ sitemname.getText() + "' and Sid=" + Integer.parseInt(sid.getText()));
                //qty = r.getInt(1);
                if(r.next() && r.getInt(1)>=0){
                    int dialogButton = JOptionPane.YES_NO_OPTION;
                    dialogButton = JOptionPane.showConfirmDialog(this,"Are you sure to Add same stock again","Warning",dialogButton);
                    if(dialogButton == 0){
                        st.executeUpdate("update stock set quantity=" + (r.getInt(1) + Integer.parseInt(squantity.getText())) + ", total = " + (r.getInt(1) + Integer.parseInt(squantity.getText())) * Integer.parseInt(sitemperbox.getText()) + " where I_name = "+ " '"+ sitemname.getText() + "' and Sid=" + Integer.parseInt(sid.getText()));
                        JOptionPane.showMessageDialog(this,"Inserted Succesfully");
                    }else{
                        
                    }
                }else{
                    ResultSet rw = st.executeQuery("select I_name,I_id from stock group by I_name");
                        while(rw.next()){
                            if(rw.getString(1).equals(sitemname.getText())==false && rw.getString(2).equals(sitemid.getText())){
                                throw new Exception();
                            }
                    }
                        String query = "insert into stock(Sid,I_id,I_name,quantity,Noofitem,rate,Dateofstock,company,dealer,total) values(" + Integer.parseInt(sid.getText()) + "," + Integer.parseInt(sitemid.getText()) + "," + "'" + sitemname.getText() + "'" + "," + Integer.parseInt(squantity.getText()) + "," + Integer.parseInt(sitemperbox.getText()) + "," + Integer.parseInt(srate.getText()) + "," + "'" + datedatabase + "'" + "," + "'" + scompany.getText() + "'" + "," + "'" + sdealer.getText() + "'" + "," +Integer.parseInt(stotal.getText())+ ")";
                        PreparedStatement ps = cn.prepareStatement(query);
                        ps.execute();
                        DefaultTableModel model = (DefaultTableModel) stable.getModel();
                        model.addRow(new Object[]{sid.getText(),sdealer.getText(),sitemid.getText(),sitemname.getText(),squantity.getText(),sitemperbox.getText(),stotal.getText(),srate.getText(),scompany.getText(),sdate.getText()});
                        JOptionPane.showMessageDialog(this,"successfully added");
                        
                        // code for adding in bill and in transaction
                        if(global_flg == 0){
                            ResultSet s = st.executeQuery("select max(BillId) from stock_bill");s.next();
                            BillId = s.getInt(1) + 1;
                            st.executeUpdate("insert into stock_bill(BillId) values (" + BillId + ")");
                            global_flg = 1;
                        }
                        String querytran = "insert into stock_trans(BillId,ItemId,totalquantity,price,total) values(" + BillId + "," + Integer.parseInt(sitemid.getText()) + "," + Integer.parseInt(stotal.getText()) + "," +Integer.parseInt(srate.getText()) + "," +Integer.parseInt(stotal.getText())*Integer.parseInt(srate.getText()) + ")";
                        PreparedStatement ps1 = cn.prepareStatement(querytran);
                        ps1.execute();
                        check = 1;
                }
            }catch(SQLException e){
                e.printStackTrace();
                //JOptionPane.showMessageDialog(this,"UNKNOWN ERROR","ERROR",JOptionPane.ERROR_MESSAGE);
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,"Item Id Alresdy Assigned","ERROR",JOptionPane.ERROR_MESSAGE);
            } 
        }
    }//GEN-LAST:event_sbuyActionPerformed

    private void sdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sdateMouseClicked
        if(comboyear.getSelectedIndex()!= 0 && combomonth.getSelectedIndex() != 0 && combodate.getSelectedIndex() != 0){
            datedatabase = (String)comboyear.getSelectedItem() + "-" + (String)combomonth.getSelectedItem() + "-" + (String)combodate.getSelectedItem();
            sdate.setText(datedatabase);
        }
    }//GEN-LAST:event_sdateMouseClicked

    private void stotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stotalMouseClicked
        try{
            if(!(squantity.getText().isEmpty() && sitemperbox.getText().isEmpty()))  {
                stotal.setText(String.valueOf(Integer.parseInt(squantity.getText()) * Integer.parseInt(sitemperbox.getText())));
            }else throw new Exception();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Please fill Quantity and Number of Item","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_stotalMouseClicked

    private void comboitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboitemActionPerformed
        String s = (String) comboitem.getSelectedItem();
        try {
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            ResultSet r = st.executeQuery("select I_id,sum(total),max(rate) from stock where I_name = '" + s +"'" + "group by I_name");
            if(r.next()){
                iitemid.setText(r.getString(1));
                iquantity.setText(r.getString(2));
                irate.setText(r.getString(3));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,e.toString(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_comboitemActionPerformed

    private void itemaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemaddActionPerformed
       try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            String x = (String) comboitem.getSelectedItem();
            //start
            ResultSet re = st.executeQuery("select sum(total) from stock where I_name='" + x + "' group by I_name");
            if(re.next()){
                if(Integer.parseInt(iselected.getText()) > re.getInt(1)){
                    JOptionPane.showMessageDialog(this, "Enter valid quantity","ERROR",JOptionPane.ERROR_MESSAGE);   
                    iselected.setText(null);
                }
            } 
            ResultSet rw=st.executeQuery("select ItemName from item where ItemName=" + "'" + x + "'");
            if(rw.next()){
                String que="update item set quantity=quantity+" + Integer.parseInt(iselected.getText()) + ",rate=" + Integer.parseInt(irate.getText()) + " where ItemName=" + "'" + x + "'";
                PreparedStatement ps3 = cn.prepareStatement(que);
                ps3.execute();
            }
            else{
            String query = "insert into item(Itemid,Itemname,quantity,rate) values(" + Integer.parseInt(iitemid.getText())+ "," + "'" + x + "'" + "," + Integer.parseInt(iselected.getText()) + "," + Integer.parseInt(irate.getText()) + ")";
            PreparedStatement ps = cn.prepareStatement(query);
            ps.execute();
            }
            DefaultTableModel model = (DefaultTableModel) itable.getModel();
            model.addRow((new Object[]{iitemid.getText(),(String)comboitem.getSelectedItem(),iselected.getText(),irate.getText()}));
            JOptionPane.showMessageDialog(this,"successfully added");
            ResultSet rs = st.executeQuery("select * from stock where I_name='" + x + "'");
            int userinput = Integer.parseInt(iselected.getText());
            int stocktotal,userinput1=0,flg=0;
            while(rs.next()){
                stocktotal = rs.getInt(10); 
                if(flg==0){
                    stocktotal =(stocktotal - userinput);
                    flg++;
                }else{
                    stocktotal =(stocktotal- userinput1);
                }
                userinput1=Math.abs(stocktotal);
                if(stocktotal<0){
                    String quer="update stock set total=0 where Sid=" + rs.getInt(1) + " and " + "I_name='" + x + "'";
                    PreparedStatement ps2 = cn.prepareStatement(quer);
                    ps2.execute();
                }else{
                    String quer="update stock set total=" + stocktotal + " where Sid=" + rs.getInt(1) + " and " + "I_name='" + x + "'";
                    PreparedStatement ps2 = cn.prepareStatement(quer);
                    ps2.execute();
                }
                if(stocktotal >= 0)
                    break ;             
            }
            //end
       }catch(SQLException e){
           e.printStackTrace();
       }catch(Exception e){
           JOptionPane.showMessageDialog(this,"Please Select All Field","ERROR",JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_itemaddActionPerformed

    private void makebillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makebillActionPerformed
        if(check == 0){
            JOptionPane.showMessageDialog(this,"You can't create bill before entering stock","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                String paidby = "cash";
                ResultSet r = st.executeQuery("select sum(total) from stock_trans group by BillId having BillId ="+BillId);r.next();                
                String query = "update stock_bill set BillDate=" + "'" + sdate.getText() + "'" + ",totalamount=" + r.getInt(1) + ",gst=" + 18 + ",finalamount=" + (r.getInt(1)+((r.getInt(1)*18)/100)) + ",paidby="+ "'" + paidby + "'" + "where BillId="+BillId;
                PreparedStatement ps = cn.prepareStatement(query);
                ps.execute();
                global_flg = 0; 
                JOptionPane.showMessageDialog(this,"Bill Created Succuessfully.");
                r.close();
                sid.setText("");
                selectcombo.setSelectedIndex(0);
                comboyear.setSelectedIndex(0);
                combomonth.setSelectedIndex(0);
                combodate.setSelectedIndex(0);
                sdealer.setText("");
                sitemname.setText("");
                sitemid.setText("");
                squantity.setText("");
                sitemperbox.setText("");
                stotal.setText("");
                srate.setText("");
                scompany.setText("");
                sdate.setText("");
            }catch(SQLException ex) {
                JOptionPane.showMessageDialog(this,"ERROR In Performing Bill","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_makebillActionPerformed

    private void sitemidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sitemidMouseClicked
         try{
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
                st = cn.createStatement();
                ResultSet s=st.executeQuery("select I_id,I_name from stock where I_name =" + "'" + sitemname.getText() + "'");
                if(s.next()){
                    sitemid.setText(s.getString(1));
                }else{
                    sitemid.setText(null);
                }
                s.close();
       }catch(SQLException e){
           JOptionPane.showMessageDialog(this,e.toString(),"ERROR",JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_sitemidMouseClicked

    private void iselectedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iselectedKeyReleased
        if(!(iselected.getText().isEmpty())){
            if(Integer.parseInt(iselected.getText()) > Integer.parseInt(iquantity.getText()) ){
                JOptionPane.showMessageDialog(this, "Enter valid quantity","ERROR",JOptionPane.ERROR_MESSAGE);   
                iselected.setText(null);
            } 
        }
    }//GEN-LAST:event_iselectedKeyReleased

    private void iselectedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iselectedKeyTyped
        if((Character.isDigit(evt.getKeyChar()))==false || (Character.isSpaceChar(evt.getKeyChar()))){
            evt.consume();
        }
    }//GEN-LAST:event_iselectedKeyTyped

    private void billdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billdataActionPerformed
        //removing all the frame
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        //Adding that add user panel
        mainPanel.add(BillData);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_billdataActionPerformed

    private void additemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemActionPerformed
        //removing all the frame
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        //Adding that add user panel
        mainPanel.add(AddItem);
        mainPanel.repaint();
        mainPanel.revalidate();
        //item adder to comboitem
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            comboitem.removeAllItems();
            st = cn.createStatement();
            ResultSet s = st.executeQuery(" select distinct I_name,sum(Noofitem) from stock group by I_name;");
            comboitem.addItem("<Select>");
            while(s.next()){
                comboitem.addItem(s.getString(1));
            }
           s.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,e.toString(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_additemActionPerformed

    private void buystockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buystockActionPerformed
        //removing all the frame
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        //Adding that add user panel
        mainPanel.add(BuyStock);
        mainPanel.repaint();
        mainPanel.revalidate();
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            ResultSet s=st.executeQuery("select distinct I_name from stock");
            selectcombo.removeAllItems();
            selectcombo.addItem("<Select Item>");
            while(s.next()){
                selectcombo.addItem(s.getString(1));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,"UNKNOWN ERROR","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buystockActionPerformed

    private void adduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adduserActionPerformed
        //removing all the frame
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        //Adding that add user panel
        mainPanel.add(AddUser);
        mainPanel.repaint();
        mainPanel.revalidate();
        //starting of add user code
        //Resulset s;
    }//GEN-LAST:event_adduserActionPerformed

    private void sbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbillActionPerformed
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            dlabel.setText("Displaying Stock Bill information");
            ResultSet s=st.executeQuery("select * from stock_bill");
            DefaultTableModel model = (DefaultTableModel) billtable.getModel();
            model.setRowCount(0);
            while(s.next()){
                model.addRow((new Object[]{s.getString(1),s.getString(2),s.getString(3),s.getString(4),s.getString(5),s.getString(6)}));
            }
            flag = 0;
            s.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,e.toString(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_sbillActionPerformed

    private void billtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billtableMouseClicked
        int r=billtable.getSelectedRow() + 1;
        try {
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            ResultSet s = null;
            DefaultTableModel model = (DefaultTableModel) Tra_table.getModel();
            if(flag == 0){
                s=st.executeQuery("select BillId,TranId,ItemId,I_name,totalquantity,price,stock_trans.total from stock,stock_trans where BillId = " + r + " and stock.I_id = stock_trans.ItemId");
                 while(s.next()){
                    model.addRow((new Object[]{s.getString(1),s.getString(2),s.getString(3),s.getString(4),s.getString(5),s.getString(6),s.getString(7),"NA","NA"}));
                }
            }else{
                s=st.executeQuery("select BillId,TranId,Item_Id,Item_name,quantity,rate,total,discount,totalamount from item_trans where BillId = " + r );
                 while(s.next()){
                    model.addRow((new Object[]{s.getString(1),s.getString(2),s.getString(3),s.getString(4),s.getString(5),s.getString(6),s.getString(7),s.getString(8),s.getString(9)}));
                }
            }
            s.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,"Error occured while displaying transaction's","ERROR",JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_billtableMouseClicked

    private void custbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custbillActionPerformed
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            dlabel.setText("Displaying Customer Bill information");
            ResultSet s=st.executeQuery("select * from item_bill");
            DefaultTableModel model = (DefaultTableModel) billtable.getModel();
            model.setRowCount(0);
            while(s.next()){
                model.addRow((new Object[]{s.getString(1),s.getString(2),s.getString(3),s.getString(4),s.getString(5),s.getString(6)}));
            }
            flag=1;
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,"UNKNOWN ERROR","ERROR",JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_custbillActionPerformed

    private void selectcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectcomboActionPerformed
        if(selectcombo.getSelectedIndex()!=0){
            sitemname.setText((String)selectcombo.getSelectedItem());
            try{
                cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
                st = cn.createStatement();
                ResultSet s=st.executeQuery("select I_id from stock where I_name='" + (String)selectcombo.getSelectedItem() + "'");
                s.next();
                sitemid.setText(s.getString(1));
            }catch(SQLException e){
            }
        }else{
            sitemname.setText("");
        }
    }//GEN-LAST:event_selectcomboActionPerformed

    private void loginlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginlogActionPerformed
         mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(LoginLog);
        mainPanel.repaint();
        mainPanel.revalidate();
        try{
             cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
             st = cn.createStatement();
             ResultSet s = st.executeQuery("select Login.LoginId,UserName,Login.LoginDateTime from Login,user where Login.LoginId=user.LoginId");
             DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
             model.setRowCount(0);
             while(s.next()){
                model.addRow((new Object[]{s.getString(1),s.getString(2),s.getString(3)}));
             }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this,"Error In Displaying Login Data","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_loginlogActionPerformed

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(avlstock);
        mainPanel.repaint();
        mainPanel.revalidate();
        try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            ResultSet s = st.executeQuery("select I_id,I_name,dealer,max(dateofstock),sum(total) from stock group by I_name");
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            model.setRowCount(0);
            while(s.next()){
              model.addRow((new Object[]{s.getString(1),s.getString(2),s.getString(3),s.getString(4),s.getString(5)}));
            }          
        }catch(SQLException e){
           JOptionPane.showMessageDialog(this,"Error In Displaying Stock","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_stockActionPerformed

    private void backlogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backlogMouseClicked
         LoginScreenFinal l = new LoginScreenFinal();
         l.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_backlogMouseClicked

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
          mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        
        mainPanel.add(deluser);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try{
            cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Project","root","root");
            st = cn.createStatement();
            ResultSet s = st.executeQuery("select * from user where LoginId ='" + jTextField2.getText() + "'");
            if(s.next()){
                st.executeUpdate("delete from user where LoginId='" + jTextField2.getText() + "'");
                JOptionPane.showMessageDialog(this,"SucuessFully Removed Record of User");
            }else{
                JOptionPane.showMessageDialog(this,"Please Enter Valid LoginId","ERROR",JOptionPane.ERROR_MESSAGE);
                jTextField2.setText("");
            }     
        }catch(SQLException e){
           JOptionPane.showMessageDialog(this,"eror occured while removing user","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public void Age_Function(){
        // Showing a age here code 
        int day = Integer.parseInt((String)combo3.getSelectedItem());
        int month = Integer.parseInt((String)combo2.getSelectedItem());
        int year = Integer.parseInt((String)combo1.getSelectedItem());
        LocalDate dat = LocalDate.of(year, month, day);
        LocalDate now_ = LocalDate.now();
        age = Period.between(dat,now_).getYears();
        eage.setText(String.valueOf(age));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ManagerScreen().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddItem;
    private javax.swing.JPanel AddUser;
    private javax.swing.JPanel BillData;
    private javax.swing.JPanel BuyStock;
    private javax.swing.JPanel LoginLog;
    private javax.swing.JTable Tra_table;
    private javax.swing.JButton add_addUser;
    private javax.swing.JButton additem;
    private javax.swing.JButton adduser;
    private javax.swing.JPanel avlstock;
    private javax.swing.JLabel backlog;
    private javax.swing.JButton billdata;
    private javax.swing.JTable billtable;
    private javax.swing.JButton buystock;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JComboBox<String> combo3;
    private javax.swing.JComboBox<String> combodate;
    private javax.swing.JComboBox<String> comboitem;
    private javax.swing.JComboBox<String> combomonth;
    private javax.swing.JComboBox<String> comboyear;
    private javax.swing.JButton custbill;
    private javax.swing.JButton deletebutton;
    private javax.swing.JPanel deluser;
    private javax.swing.JScrollPane dispstock;
    private javax.swing.JLabel dlabel;
    private javax.swing.JTextField eadd;
    private javax.swing.JTextField eage;
    private javax.swing.JTextField elid;
    private javax.swing.JTextField emob;
    private javax.swing.JTextField ename;
    private javax.swing.JTextField epas;
    private javax.swing.JTextField erole;
    private javax.swing.JTextField iitemid;
    private javax.swing.JTextField iquantity;
    private javax.swing.JTextField irate;
    private javax.swing.JTextField iselected;
    private javax.swing.JTable itable;
    private javax.swing.JButton itemadd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel label;
    private javax.swing.JButton loginlog;
    private javax.swing.JScrollPane logintable;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton makebill;
    private javax.swing.JButton sbill;
    private javax.swing.JButton sbuy;
    private javax.swing.JTextField scompany;
    private javax.swing.JTextField sdate;
    private javax.swing.JTextField sdealer;
    private javax.swing.JComboBox<String> selectcombo;
    private javax.swing.JLabel selectitem;
    private javax.swing.JTextField sid;
    private javax.swing.JTextField sitemid;
    private javax.swing.JTextField sitemname;
    private javax.swing.JTextField sitemperbox;
    private javax.swing.JTextField squantity;
    private javax.swing.JTextField srate;
    private javax.swing.JRadioButton srdate;
    private javax.swing.JTable stable;
    private javax.swing.JButton stock;
    private javax.swing.JTextField stotal;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
/*
table stock and cusomer 
refresh those table
*/
